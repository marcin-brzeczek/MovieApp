ext {

    MIN_SDK = 24
    TARGET_SDK = 29

    KOTLIN_VERSION = '1.3.71'
    GRADLE_VERSION = '4.0.2'
    JUNIT_PLUGIN_VERSION = '1.3.2.0'
    NAVIGATION_PLUGIN_VERSION = '2.3.0'

    // AndroidX
    def annotation_version = '1.1.0'
    def androidx_core = '1.1.0'
    def androidx_fragment = '1.2.0-rc05'
    def constraint_layout_version = '1.1.3'
    def lifecycle_version = '2.1.0'
    def navigation_version = '2.3.0'
    def paging_version = '2.1.2'
    def recyclerview_version = '1.1.0'

    androidx = [
            annotation         : "androidx.annotation:annotation:$annotation_version",
            appcompat          : "androidx.appcompat:appcompat:$androidx_core",
            corektx            : "androidx.core:core-ktx:$androidx_core",
            constraintlayout   : "androidx.constraintlayout:constraintlayout:$constraint_layout_version",
            fragment           : "androidx.fragment:fragment-ktx:$androidx_fragment",
            lifecycle          : "androidx.lifecycle:lifecycle-extensions:$lifecycle_version",
            lifecycle_common   : "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version",
            navigation_fragment: "androidx.navigation:navigation-fragment-ktx:$navigation_version",
            navigation_ui      : "androidx.navigation:navigation-ui-ktx:$navigation_version",
            paging             : "androidx.paging:paging-runtime-ktx:$paging_version",
            recyclerview       : "androidx.recyclerview:recyclerview:$recyclerview_version",
    ]

    // Google Material
    google = [
            material            : "com.google.android.material:material:1.0.0",
    ]

    // Third party libs
    def binding_collection = '4.0.0'
    def dagger2 = '2.27'
    def glide = '4.11.0'
    def logger = '4.7.1'
    def moshi = '1.9.3'
    def network_log = '4.2.1'
    def retrofit = '2.6.1'
    def rxjava2 = '2.2.12'
    def rxandroid = '2.1.1'
    def rxKotlin = '2.4.0'

    deps = [
            binding_paging         : "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-paging:$binding_collection",
            binding_adapter        : "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:$binding_collection",
            binding_recyler        : "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:$binding_collection",
            dagger2_runtime        : "com.google.dagger:dagger:$dagger2",
            dagger2_android        : "com.google.dagger:dagger-android:$dagger2",
            dagger2_android_support: "com.google.dagger:dagger-android-support:$dagger2",
            dagger2_annotation     : "javax.inject:javax.inject:1",
            glide_anotation        : "com.github.bumptech.glide:annotations:$glide",
            glide                  : "com.github.bumptech.glide:glide:$glide",
            logger                 : "com.jakewharton.timber:timber:$logger",
            moshi                  : "com.squareup.moshi:moshi-kotlin:$moshi",
            netowrk1               : "com.squareup.retrofit2:converter-moshi:$retrofit",
            network2               : "com.squareup.retrofit2:adapter-rxjava2:$retrofit",
            network_log            : "com.squareup.okhttp3:logging-interceptor:$network_log",
            rxjava2                : "io.reactivex.rxjava2:rxjava:$rxjava2",
            rxandroid              : "io.reactivex.rxjava2:rxandroid:$rxandroid",
            rxKotlin               : "io.reactivex.rxjava2:rxkotlin:$rxKotlin"
    ]

    deps_kapt = [
            dagger2_compiler : "com.google.dagger:dagger-compiler:$dagger2",
            dagger2_processor: "com.google.dagger:dagger-android-processor:$dagger2",
            glide_compiler   : "com.github.bumptech.glide:compiler:$glide",
            moshi            : "com.squareup.moshi:moshi-kotlin-codegen:$moshi"
    ]

    // Tests
    def junit5 = '5.6.2'
    def androidxtest = '1.3.0'
    def androidxjunit = '1.1.2'
    def mockk = '1.10.0'
    def kotlinTest = '1.1.51'
    def junitPlugin = '1.2.0'

    deps_test = [
            runner    : "androidx.test:runner:$androidxtest",
            test      : "androidx.test:core:$androidxtest",
            androidx  : "androidx.test.ext:junit-ktx:$androidxjunit",
            junit     : "org.junit.jupiter:junit-jupiter-api:$junit5",
            junitParms: "org.junit.jupiter:junit-jupiter-params:$junit5",
            mockk     : "io.mockk:mockk:$mockk",
            kotlinTest: "org.jetbrains.kotlin:kotlin-test:$kotlinTest",
            plugin    : "de.mannodermaus.junit5:android-test-core:$junitPlugin"
    ]
}